openapi: "3.1.0"
info:
  title: "PersonsFinder API"
  description: "PersonsFinder API"
  version: "1.0.0"
servers:
  - url: "http://localhost:8080"
paths:
  /api/v1/persons:
    post:
      summary: "POST api/v1/persons"
      operationId: "createPerson"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePersonRequest"
        required: true
      responses:
        "201":
          description: "Person created successfully"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PersonDto"
        "400":
          description: "Bad Request"

    get:
      summary: "GET api/v1/persons"
      operationId: "getPersons"
      parameters:
        - name: "id"
          in: "query"
          required: true
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PersonDto"

  /api/v1/persons/{id}:
    get:
      summary: "GET api/v1/persons/{id}"
      operationId: "getPerson"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PersonDto"
        "404":
          description: "Not Found"

  /api/v1/persons/{id}/location:
    put:
      summary: "PUT api/v1/persons/{id}/location"
      operationId: "updateLocation"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonLocationRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LocationDto"
        "400":
          description: "Bad Request"

  /api/v1/persons/nearby:
    get:
      summary: "GET api/v1/persons/nearby"
      operationId: "findNearby"
      parameters:
        - name: "lat"
          in: "query"
          required: true
          schema:
            type: "number"
            format: "double"
        - name: "lon"
          in: "query"
          required: true
          schema:
            type: "number"
            format: "double"
        - name: "radiusKm"
          in: "query"
          required: true
          schema:
            type: "number"
            format: "double"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PersonNearbyDto"

components:
  schemas:
    CreatePersonRequest:
      type: "object"
      properties:
        name:
          type: "string"
      required:
        - "name"
    PersonDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
      required:
        - "id"
        - "name"
    PersonLocationRequest:
      type: "object"
      properties:
        latitude:
          type: "number"
          format: "double"
        longitude:
          type: "number"
          format: "double"
      required:
        - "latitude"
        - "longitude"
    LocationDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        latitude:
          type: "number"
          format: "double"
        longitude:
          type: "number"
          format: "double"
      required:
        - "id"
        - "latitude"
        - "longitude"
    PersonNearbyDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        distance:
          type: "number"
          format: "double"
      required:
        - "id"
        - "distance"
